{"ast":null,"code":"let currentDice = 0;\nlet previousDice = 0;\nlet currentPlayer = \"green\";\nlet currentSpritePositions = {\n  red: [40, 40, 40, 40],\n  green: [1, 1, 1, 1],\n  //debugginghere turn this to 1 // if all pawns are finishing do nextmove\n  blue: [27, 27, 27, 27],\n  yellow: [14, 14, 14, 14]\n};\nlet players = {\n  redOutOfHome: [false, false, false, false],\n  redKiller: false,\n  greenOutOfHome: [false, false, false, false],\n  //debugging\n  greenKiller: false,\n  //debugging\n  blueOutOfHome: [false, false, false, false],\n  blueKiller: false,\n  yellowOutOfHome: [false, false, false, false],\n  yellowKiller: false,\n  redFinishing: [false, false, false, false],\n  greenFinishing: [false, false, false, false],\n  blueFinishing: [false, false, false, false],\n  yellowFinishing: [false, false, false, false]\n};\nconst maxMoves = {\n  green: 51,\n  yellow: 12,\n  blue: 25,\n  red: 38\n};\nconst startingSpritePositions = {\n  red: 40,\n  green: 1,\n  blue: 27,\n  yellow: 14\n};\nlet finished = {\n  red: [false, false, false, false],\n  green: [false, false, false, false],\n  blue: [false, false, false, false],\n  yellow: [false, false, false, false]\n};\nexport default function onPlayerJoin(playerColor) {\n  movePawnsToHome(playerColor); // makeRollDiceClickable();\n  // makeSpritesClickable(playerColor);\n\n  playerInHand(currentPlayer);\n  return;\n}\n\nfunction makeRollDiceClickable() {\n  let button = document.getElementById(\"roll-dice-btn\");\n  button.addEventListener(\"click\", rollDice);\n  return;\n}\n\nfunction getOffset(el) {\n  const rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  };\n}\n\nfunction movePawnsToHome(playerColor) {\n  for (let i = 1; i < 5; i++) {\n    let postitionContainer = document.getElementById(playerColor + \"-circle-\" + i);\n    let position = getOffset(postitionContainer);\n    let pawn = document.getElementById(playerColor + \"-pawn-\" + i);\n    pawn.style.top = position.top + \"px\";\n    pawn.style.left = position.left + \"px\";\n    pawn.style.marginTop = \"28px\";\n    pawn.style.marginLeft = \"28px\";\n    pawn.style.backgroundColor = playerColor;\n  }\n\n  return;\n}\n\nfunction makeSpritesClickable(playerColor) {\n  for (let i = 1; i < 5; i++) {\n    let pawn = document.getElementById(playerColor + \"-pawn-\" + i);\n    pawn.addEventListener(\"click\", myListener);\n    pawn.style.zIndex = \"99\";\n    console.log(getComputedStyle(pawn).zIndex); // pawn.addEventListener(\"click\", function() {onClickSprite(playerColor, i)});\n  }\n\n  return;\n}\n\nfunction disableSprites(playerColor) {\n  for (let i = 1; i < 5; i++) {\n    let pawn = document.getElementById(playerColor + \"-pawn-\" + i);\n    pawn.removeEventListener(\"click\", myListener);\n    pawn.style.zIndex = \"98\";\n    console.log(getComputedStyle(pawn).zIndex); // pawn.addEventListener(\"click\", function() {onClickSprite(playerColor, i)});\n  }\n\n  return;\n}\n\nfunction myListener(event) {\n  onClickSprite(currentPlayer, event.target.id.slice(-1));\n}\n\nfunction onClickSprite(playerColor, spriteNumber) {\n  if (players[playerColor + \"Finishing\"][spriteNumber - 1]) {\n    moveWithinFinish(playerColor, spriteNumber);\n    return;\n  }\n\n  if (boundaryReached(playerColor, spriteNumber) && !players[playerColor + \"Killer\"]) {\n    return;\n  }\n\n  if (boundaryReached(playerColor, spriteNumber) && players[playerColor + \"Killer\"]) {\n    moveToLastZone(playerColor, spriteNumber);\n    return;\n  }\n\n  if (currentSpritePositions[playerColor][spriteNumber - 1] + currentDice > 51 && currentSpritePositions[playerColor][spriteNumber - 1] + currentDice < 66) {\n    let difference = currentSpritePositions[playerColor][spriteNumber - 1] + currentDice - 51;\n    currentSpritePositions[playerColor][spriteNumber - 1] = difference - 1;\n    movePawn(playerColor, spriteNumber);\n  } else if (!players[playerColor + 'OutOfHome'][spriteNumber - 1] && currentDice != 6) {\n    return;\n  } else if (players[playerColor + 'OutOfHome'][spriteNumber - 1]) {\n    currentSpritePositions[playerColor][spriteNumber - 1] = currentSpritePositions[playerColor][spriteNumber - 1] + currentDice;\n    movePawn(playerColor, spriteNumber);\n  }\n\n  if (!players[playerColor + 'OutOfHome'][spriteNumber - 1] && currentDice == 6) {\n    // currentSpritePositions[playerColor][spriteNumber-1] = currentSpritePositions[playerColor][spriteNumber-1] + 1;\n    players[playerColor + 'OutOfHome'][spriteNumber - 1] = true;\n    movePawn(playerColor, spriteNumber);\n  }\n}\n\nfunction boundaryReached(playerColor, spriteNumber) {\n  let hasRotated = false;\n\n  if (currentSpritePositions[playerColor][spriteNumber - 1] <= maxMoves[playerColor]) {\n    //this change\n    hasRotated = true;\n  }\n\n  if (currentSpritePositions[playerColor][spriteNumber - 1] + currentDice > maxMoves[playerColor] && hasRotated) {\n    return true; //working on this\n  }\n}\n\nfunction rollDice() {\n  currentDice = Math.floor(Math.random() * (6 - 1 + 1) + 1);\n  let diceCounter = document.getElementById('dice-counter');\n  diceCounter.innerHTML = currentDice;\n  document.getElementById('roll-dice-btn').removeEventListener(\"click\", rollDice);\n\n  if (currentDice < 6 && isLocked(currentPlayer)) {\n    nextMove();\n  } else {\n    makeSpritesClickable(currentPlayer);\n  }\n\n  return;\n}\n\nfunction opponentExists(playerColor, position) {\n  if (position == 48 || position == 1 || position == 9 || position == 14 || position == 22 || position == 27 || position == 35 || position == 40) {\n    return false;\n  } // let x = [[\"white\",69],[\"white\",69],[\"white\",69],[\"white\",69]]\n\n\n  let colors = Object.keys(currentSpritePositions);\n  let killFlag = false;\n\n  for (let i = 0; i < 4; i++) {\n    let currentColor = colors[i];\n\n    for (let j = 0; j < 4; j++) {\n      if (position == currentSpritePositions[currentColor][j] && currentColor != playerColor) {\n        // x[i][0] = currentColor;\n        // x[i][1] = j;\n        killFlag = killOpponent(currentColor, j + 1);\n      }\n    }\n  }\n\n  return killFlag;\n}\n\nfunction movePawn(playerColor, spriteNumber) {\n  let x = currentSpritePositions[playerColor][spriteNumber - 1];\n  let postitionContainer = document.getElementById(\"box\" + x);\n  let pawn = document.getElementById(playerColor + \"-pawn-\" + spriteNumber); //working here.. sprites dont return to home,, also extra turn after killing\n\n  let position = getOffset(postitionContainer); //working here\n\n  let previousPosition = getOffset(pawn);\n  let killFlag = opponentExists(playerColor, x);\n  animatePawn(pawn, previousPosition, position); // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n\n  pawn.style.marginTop = \"9px\";\n  pawn.style.marginLeft = \"9px\";\n\n  if (killFlag) {\n    console.log(killFlag);\n    nextMoveSamePlayer();\n  } else if (currentDice == 6) {\n    nextMoveSamePlayer(); //check this\n  } else {\n    nextMove();\n  }\n\n  return;\n}\n\nfunction killOpponent(playerColor, spriteNumber) {\n  let postitionContainer = document.getElementById(playerColor + \"-circle-\" + spriteNumber);\n  let position = getOffset(postitionContainer);\n  let pawn = document.getElementById(playerColor + \"-pawn-\" + spriteNumber);\n  let previousPosition = getOffset(pawn); // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n\n  animatePawn(pawn, previousPosition, position);\n  pawn.style.marginTop = \"28px\";\n  pawn.style.marginLeft = \"28px\"; // pawn.style.backgroundColor=playerColor;\n\n  players[currentPlayer + \"Killer\"] = true;\n  console.log(players); //set vars\n\n  currentSpritePositions[playerColor][spriteNumber - 1] = startingSpritePositions[playerColor];\n  players[playerColor + \"OutOfHome\"][spriteNumber - 1] = false;\n\n  if (isLocked(playerColor)) {\n    players[playerColor + \"Killer\"] = false;\n  }\n\n  return true;\n}\n\nfunction nextMoveSamePlayer() {\n  document.getElementById('dice-counter').innerHTML = \"\";\n  disableSprites(currentPlayer);\n  makeRollDiceClickable(); // currentDice = 0; //working here 5pm\n\n  return;\n}\n\nfunction nextMove() {\n  document.getElementById('dice-counter').innerHTML = \"\";\n  disableSprites(currentPlayer);\n  let player = currentPlayer;\n\n  switch (player) {\n    case \"red\":\n      currentPlayer = \"green\";\n      break;\n\n    case \"green\":\n      currentPlayer = \"yellow\";\n      break;\n\n    case \"yellow\":\n      currentPlayer = \"blue\";\n      break;\n\n    case \"blue\":\n      currentPlayer = \"red\";\n      break;\n  } // didMove = false;\n\n\n  makeRollDiceClickable(); // window.alert(currentPlayer+\"'s turn\"); //temporary code\n\n  previousDice = currentDice;\n  currentDice = 0; //working here 5pm\n  // document.getElementById('dice-counter').innerHTML = \".  previous= \"+previousDice+\"      current= \"+ currentDice;\n\n  playerInHand(currentPlayer);\n  return;\n}\n\nfunction playerInHand(playerColor) {\n  let navTurn = document.getElementById('player-turn');\n  navTurn.innerHTML = playerColor + \"'s turn.\";\n  navTurn.style.color = playerColor;\n  console.log(currentPlayer);\n  makeRollDiceClickable(); // makeSpritesClickable(playerColor);\n\n  return;\n}\n\nfunction isLocked(playerColor) {\n  for (let i = 0; i < 4; i++) {\n    if (players[playerColor + \"OutOfHome\"][i]) {\n      return false;\n    }\n  }\n\n  return true; //include 6 logic in morning\n}\n\nfunction moveWithinFinish(playerColor, spriteNumber) {\n  let destination = currentSpritePositions[playerColor][spriteNumber - 1] + currentDice;\n  console.log('is finishing');\n\n  if (destination > 76) {\n    return;\n  }\n\n  if (destination == 76) {\n    spriteWon(playerColor, spriteNumber);\n    return;\n  }\n\n  currentSpritePositions[playerColor][spriteNumber - 1] = destination;\n  let x = destination - 70;\n  let postitionContainer = document.getElementById(\"box-\" + playerColor + \"-\" + x);\n  let pawn = document.getElementById(playerColor + \"-pawn-\" + spriteNumber);\n  let position = getOffset(postitionContainer);\n  let previousPosition = getOffset(pawn);\n  animatePawn(pawn, previousPosition, position); // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n\n  pawn.style.marginTop = \"9px\";\n  pawn.style.marginLeft = \"9px\";\n  nextMove();\n}\n\nfunction moveToLastZone(playerColor, spriteNumber) {\n  let difference = currentSpritePositions[playerColor][spriteNumber - 1] + currentDice - maxMoves[playerColor]; //working on this\n\n  if (difference == 6) {\n    spriteWon(playerColor, spriteNumber);\n    return;\n  }\n\n  currentSpritePositions[playerColor][spriteNumber - 1] = difference + 70;\n  let x = currentSpritePositions[playerColor][spriteNumber - 1] - 70;\n  let postitionContainer = document.getElementById(\"box-\" + playerColor + \"-\" + x);\n  let pawn = document.getElementById(playerColor + \"-pawn-\" + spriteNumber);\n  let position = getOffset(postitionContainer);\n  let previousPosition = getOffset(pawn);\n  animatePawn(pawn, previousPosition, position); // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n\n  pawn.style.marginTop = \"9px\";\n  pawn.style.marginLeft = \"9px\";\n  players[playerColor + \"Finishing\"][spriteNumber - 1] = true;\n  players[playerColor + \"OutOfHome\"][spriteNumber - 1] = false;\n  nextMove();\n}\n\nfunction spriteWon(playerColor, spriteNumber) {\n  finished[playerColor][spriteNumber - 1] = true;\n  players[playerColor + \"OutOfHome\"][spriteNumber - 1] = false;\n  let pawn = document.getElementById(playerColor + \"-pawn-\" + spriteNumber); // pawn.style.top= \"200%\";\n  // pawn.style.left= \"200%\";\n  // pawn.style.marginTop= \"9px\";\n  // pawn.style.marginLeft= \"9px\";\n\n  let position = getOffset(document.getElementById('ending-box'));\n  let previousPosition = getOffset(pawn);\n  animatePawn(pawn, previousPosition, position);\n  pawn.removeEventListener(\"click\", myListener);\n  hasWon(playerColor);\n  nextMoveSamePlayer();\n  console.log('pawnwon');\n}\n\nfunction hasWon(playerColor) {\n  if (finished[playerColor][0] && finished[playerColor][1] && finished[playerColor][2] && finished[playerColor][3]) {\n    window.alert(playerColor + \"won\");\n  }\n}\n\nfunction animatePawn(pawn, previousPosition, position) {\n  let id = null;\n  let leftAdd = true;\n  let topAdd = true;\n  let pos = previousPosition;\n\n  if (position.left < previousPosition.left) {\n    leftAdd = false;\n  }\n\n  if (position.top < previousPosition.top) {\n    topAdd = false;\n  }\n\n  clearInterval(id);\n  id = setInterval(frame, 5);\n  let frameCount = 0;\n\n  function frame() {\n    frameCount++;\n\n    if (pos.left == position.left && pos.top == position.top || frameCount == 100) {\n      clearInterval(id);\n      pawn.style.top = position.top + 'px';\n      pawn.style.left = position.left + 'px';\n    } else {\n      if (leftAdd && pos.left != position.left) {\n        pos.left++;\n        pawn.style.left = pos.left + 'px';\n      }\n\n      if (!leftAdd && pos.left != position.left) {\n        pos.left--;\n        pawn.style.left = pos.left + 'px';\n      }\n\n      if (topAdd && pos.top != position.top) {\n        pos.top++;\n        pawn.style.top = pos.top + 'px';\n      }\n\n      if (!topAdd && pos.top != position.top) {\n        pos.top--;\n        pawn.style.top = pos.top + 'px';\n      }\n    }\n  }\n}\n\nwindow.addEventListener('resize', function (event) {\n  let playerColors = [\"red\", \"green\", \"blue\", \"yellow\"];\n\n  for (let i = 0; i < 4; i++) {\n    let playerColor = playerColors[i];\n    console.log(playerColor);\n\n    for (let j = 1; j < 5; j++) {\n      let pawn = document.getElementById(playerColor + \"-pawn-\" + j);\n\n      if (players[playerColor + \"OutOfHome\"][j - 1] && !players[playerColor + \"Finishing\"][j - 1]) {\n        let x = currentSpritePositions[playerColor][j - 1];\n        let position = getOffset(document.getElementById(\"box\" + x));\n        pawn.style.top = position.top + \"px\";\n        pawn.style.left = position.left + \"px\";\n      }\n\n      if (!players[playerColor + \"OutOfHome\"][j - 1]) {\n        //send it to home\n        let position = getOffset(document.getElementById(playerColor + \"-circle-\" + j));\n        pawn.style.top = position.top + \"px\";\n        pawn.style.left = position.left + \"px\";\n      } else if (players[playerColor + \"Finishing\"][j - 1]) {\n        let x = currentSpritePositions[playerColor][j - 1] - 70;\n        let position = document.getElementById(\"box-\" + playerColor + \"-\" + x);\n        pawn.style.top = position.top + \"px\";\n        pawn.style.left = position.left + \"px\";\n      }\n    }\n  } // update locations for all pawns\n\n\n  console.log(\"resize\");\n}, true);","map":{"version":3,"names":["currentDice","previousDice","currentPlayer","currentSpritePositions","red","green","blue","yellow","players","redOutOfHome","redKiller","greenOutOfHome","greenKiller","blueOutOfHome","blueKiller","yellowOutOfHome","yellowKiller","redFinishing","greenFinishing","blueFinishing","yellowFinishing","maxMoves","startingSpritePositions","finished","onPlayerJoin","playerColor","movePawnsToHome","playerInHand","makeRollDiceClickable","button","document","getElementById","addEventListener","rollDice","getOffset","el","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","i","postitionContainer","position","pawn","style","marginTop","marginLeft","backgroundColor","makeSpritesClickable","myListener","zIndex","console","log","getComputedStyle","disableSprites","removeEventListener","event","onClickSprite","target","id","slice","spriteNumber","moveWithinFinish","boundaryReached","moveToLastZone","difference","movePawn","hasRotated","Math","floor","random","diceCounter","innerHTML","isLocked","nextMove","opponentExists","colors","Object","keys","killFlag","currentColor","j","killOpponent","x","previousPosition","animatePawn","nextMoveSamePlayer","player","navTurn","color","destination","spriteWon","hasWon","alert","leftAdd","topAdd","pos","clearInterval","setInterval","frame","frameCount","playerColors"],"sources":["/home/raft/dev/ludo-frontend/ludo-dev/src/logic/GameFunctions.js"],"sourcesContent":["\nlet currentDice = 0;\nlet previousDice = 0;\nlet currentPlayer = \"green\";\n\nlet currentSpritePositions = {\n  red: [40,40,40,40],\n  green: [1,1,1,1],  //debugginghere turn this to 1 // if all pawns are finishing do nextmove\n  blue: [27,27,27,27],\n  yellow: [14,14,14,14]\n}\nlet players = {\n  redOutOfHome: [false,false,false,false],\n  redKiller: false,\n  greenOutOfHome: [false,false,false,false],  //debugging\n  greenKiller: false, //debugging\n  blueOutOfHome: [false,false,false,false],\n  blueKiller: false,\n  yellowOutOfHome: [false,false,false,false],\n  yellowKiller: false,\n  redFinishing: [false,false,false,false],\n  greenFinishing: [false,false,false,false],\n  blueFinishing: [false,false,false,false],\n  yellowFinishing: [false,false,false,false]\n}\nconst maxMoves = {\n  green: 51,\n  yellow: 12,\n  blue: 25,\n  red: 38,\n}\nconst startingSpritePositions = {\n  red: 40,\n  green: 1,\n  blue: 27,\n  yellow: 14,\n}\n\nlet finished = {\n  red: [false,false,false,false],\n  green: [false,false,false,false],\n  blue: [false,false,false,false],\n  yellow: [false,false,false,false]\n}\n\nexport default function onPlayerJoin(playerColor) {\n  movePawnsToHome(playerColor);\n  // makeRollDiceClickable();\n  // makeSpritesClickable(playerColor);\n  playerInHand(currentPlayer);\n  return;\n}\n\nfunction makeRollDiceClickable(){\n  let button = document.getElementById(\"roll-dice-btn\");\n  button.addEventListener(\"click\", rollDice);\n  return;\n}\n\nfunction getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\nfunction movePawnsToHome(playerColor){\n  for (let i=1; i<5; i++){\n    let postitionContainer = document.getElementById(playerColor+\"-circle-\"+i);\n    let position = getOffset(postitionContainer);\n    let pawn = document.getElementById(playerColor+\"-pawn-\"+i);\n  \n    pawn.style.top= position.top+\"px\";\n    pawn.style.left= position.left+\"px\";\n    pawn.style.marginTop= \"28px\";\n    pawn.style.marginLeft= \"28px\";\n    pawn.style.backgroundColor=playerColor;\n  }\n  return;\n}\n\nfunction makeSpritesClickable(playerColor) {\n  for (let i=1; i<5; i++){\n    let pawn = document.getElementById(playerColor+\"-pawn-\"+i);\n    pawn.addEventListener(\"click\", myListener);\n    pawn.style.zIndex = \"99\";\n    console.log(getComputedStyle(pawn).zIndex);\n    // pawn.addEventListener(\"click\", function() {onClickSprite(playerColor, i)});\n  }\n  return;\n}\n\nfunction disableSprites(playerColor) {\n  for (let i=1; i<5; i++){\n    let pawn = document.getElementById(playerColor+\"-pawn-\"+i);\n    pawn.removeEventListener(\"click\", myListener);\n    pawn.style.zIndex= \"98\";\n    console.log(getComputedStyle(pawn).zIndex);\n    // pawn.addEventListener(\"click\", function() {onClickSprite(playerColor, i)});\n  }\n  return;\n}\n\nfunction myListener(event){\n  onClickSprite(currentPlayer, event.target.id.slice(-1));\n}\n\nfunction onClickSprite(playerColor, spriteNumber) { \n  if (players[playerColor+\"Finishing\"][spriteNumber - 1]) {\n    moveWithinFinish(playerColor,spriteNumber);\n    return;\n  }\n  if (boundaryReached(playerColor, spriteNumber) && !players[playerColor+\"Killer\"]) {\n    return;\n  }\n  if (boundaryReached(playerColor, spriteNumber) && players[playerColor+\"Killer\"]) {\n    moveToLastZone(playerColor, spriteNumber);\n    return;\n  }\n  if (currentSpritePositions[playerColor][spriteNumber-1] + currentDice > 51 && currentSpritePositions[playerColor][spriteNumber-1] + currentDice < 66) {\n    let difference = currentSpritePositions[playerColor][spriteNumber-1] + currentDice - 51;\n    currentSpritePositions[playerColor][spriteNumber-1] = difference-1;\n    movePawn(playerColor, spriteNumber);\n  }\n  else if (!players[playerColor+'OutOfHome'][spriteNumber-1] && currentDice!=6){\n    return;\n  }\n  else if (players[playerColor+'OutOfHome'][spriteNumber-1]) {\n    currentSpritePositions[playerColor][spriteNumber-1] = currentSpritePositions[playerColor][spriteNumber-1] + currentDice;\n    movePawn(playerColor, spriteNumber);\n  } \n  if (!players[playerColor+'OutOfHome'][spriteNumber-1] && currentDice==6) {\n    // currentSpritePositions[playerColor][spriteNumber-1] = currentSpritePositions[playerColor][spriteNumber-1] + 1;\n    players[playerColor+'OutOfHome'][spriteNumber-1] = true;\n    movePawn(playerColor, spriteNumber);\n  }\n}\n\nfunction boundaryReached(playerColor, spriteNumber) {\n  let hasRotated = false;\n  if (currentSpritePositions[playerColor][spriteNumber-1] <= maxMoves[playerColor]){ //this change\n    hasRotated = true;\n  }\n  if (currentSpritePositions[playerColor][spriteNumber-1] + currentDice > maxMoves[playerColor] && hasRotated) {\n    return true; //working on this\n  }\n}\n\nfunction rollDice() {\n  currentDice = Math.floor(Math.random() * (6 - 1 + 1) + 1);\n  let diceCounter = document.getElementById('dice-counter');\n  diceCounter.innerHTML = currentDice;\n  document.getElementById('roll-dice-btn').removeEventListener(\"click\", rollDice);\n  if(currentDice < 6 && isLocked(currentPlayer)) {\n    nextMove();\n  }\n  else {\n    makeSpritesClickable(currentPlayer);\n  }\n  return;\n}\n\nfunction opponentExists (playerColor, position) {\n  if(position == 48 || position == 1 || position == 9 || position == 14 || position == 22 || position == 27 || position == 35 || position == 40){\n    return false\n  }\n\n  // let x = [[\"white\",69],[\"white\",69],[\"white\",69],[\"white\",69]]\n  let colors = Object.keys(currentSpritePositions);\n  let killFlag = false;\n\n  for (let i=0; i<4; i++) {\n    let currentColor = colors[i];\n    for(let j=0; j<4; j++){\n      if (position == currentSpritePositions[currentColor][j] && currentColor != playerColor) {\n        // x[i][0] = currentColor;\n        // x[i][1] = j;\n        killFlag = killOpponent(currentColor, j + 1);\n      }\n    }\n  }\n  return killFlag;\n}\n\nfunction movePawn(playerColor, spriteNumber){\n  let x = currentSpritePositions[playerColor][spriteNumber - 1];\n  let postitionContainer = document.getElementById(\"box\"+x);\n  let pawn = document.getElementById(playerColor+\"-pawn-\"+spriteNumber);  //working here.. sprites dont return to home,, also extra turn after killing\n  let position = getOffset(postitionContainer);  //working here\n  let previousPosition = getOffset(pawn);\n  \n  let killFlag = opponentExists(playerColor, x);\n  animatePawn(pawn, previousPosition, position);\n\n  // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n  pawn.style.marginTop= \"9px\";\n  pawn.style.marginLeft= \"9px\";\n\n  if (killFlag) {\n    console.log(killFlag);\n    nextMoveSamePlayer();\n  }\n  else if (currentDice == 6) {\n    nextMoveSamePlayer(); //check this\n  } else {\n    nextMove();\n  }\n  \n  return;\n}\n\nfunction killOpponent(playerColor,spriteNumber){\n    let postitionContainer = document.getElementById(playerColor+\"-circle-\"+spriteNumber);\n    let position = getOffset(postitionContainer);\n    let pawn = document.getElementById(playerColor+\"-pawn-\"+spriteNumber);\n    let previousPosition = getOffset(pawn);\n    \n    // pawn.style.top= position.top+\"px\";\n    // pawn.style.left= position.left+\"px\";\n    animatePawn(pawn,previousPosition,position);\n    pawn.style.marginTop= \"28px\";\n    pawn.style.marginLeft= \"28px\";\n    // pawn.style.backgroundColor=playerColor;\n\n    players[currentPlayer+\"Killer\"] = true;\n    console.log(players);\n\n    //set vars\n    currentSpritePositions[playerColor][spriteNumber -1] = startingSpritePositions[playerColor];\n    players[playerColor+\"OutOfHome\"][spriteNumber-1] = false;\n    if (isLocked(playerColor)) {\n      players[playerColor+\"Killer\"] = false;\n    }\n  return true;\n}\n\nfunction nextMoveSamePlayer() {\n  document.getElementById('dice-counter').innerHTML = \"\";\n  disableSprites(currentPlayer);\n\n  makeRollDiceClickable();\n\n  // currentDice = 0; //working here 5pm\n  return;\n}\n\nfunction nextMove(){\n  document.getElementById('dice-counter').innerHTML = \"\"\n  disableSprites(currentPlayer);\n  \n  let player = currentPlayer\n  switch (player) {\n    case \"red\": currentPlayer=\"green\" \n    break;\n    case \"green\": currentPlayer=\"yellow\" \n    break;\n    case \"yellow\": currentPlayer=\"blue\" \n    break;\n    case \"blue\": currentPlayer=\"red\" \n    break;\n  }\n  // didMove = false;\n\n  makeRollDiceClickable();\n  // window.alert(currentPlayer+\"'s turn\"); //temporary code\n  previousDice = currentDice;\n  currentDice = 0; //working here 5pm\n  // document.getElementById('dice-counter').innerHTML = \".  previous= \"+previousDice+\"      current= \"+ currentDice;\n  playerInHand(currentPlayer);\n  return;\n}\n\nfunction playerInHand(playerColor) {\n  let navTurn = document.getElementById('player-turn')\n  navTurn.innerHTML = playerColor+\"'s turn.\";\n  navTurn.style.color = playerColor;\n\n  console.log(currentPlayer);\n  makeRollDiceClickable();\n  // makeSpritesClickable(playerColor);\n  return;\n}\n\nfunction isLocked(playerColor) {\n  for (let i=0;i<4;i++){\n    if (players[playerColor+\"OutOfHome\"][i]) {\n      return false;\n    }\n  }\n  return true;\n\n  //include 6 logic in morning\n}\n\nfunction moveWithinFinish(playerColor, spriteNumber) {\n  let destination = currentSpritePositions[playerColor][spriteNumber - 1] + currentDice;\n  console.log('is finishing');\n  if (destination > 76) {\n    return;\n  }\n  if (destination == 76) {\n    spriteWon(playerColor, spriteNumber);\n    return;\n  }\n\n  currentSpritePositions[playerColor][spriteNumber - 1] = destination;\n  let x = destination - 70;\n  let postitionContainer = document.getElementById(\"box-\"+playerColor+\"-\"+x);\n  let pawn = document.getElementById(playerColor+\"-pawn-\"+spriteNumber); \n  let position = getOffset(postitionContainer); \n\n  let previousPosition = getOffset(pawn);\n  animatePawn(pawn,previousPosition,position);\n  // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n  pawn.style.marginTop= \"9px\";\n  pawn.style.marginLeft= \"9px\";\n  nextMove();\n}\n\nfunction moveToLastZone(playerColor,spriteNumber) {\n  let difference = currentSpritePositions[playerColor][spriteNumber-1] + currentDice - maxMoves[playerColor]; //working on this\n  if (difference == 6) {\n    spriteWon(playerColor, spriteNumber);\n    return;\n  }\n\n  currentSpritePositions[playerColor][spriteNumber - 1] = difference + 70;\n\n  let x = currentSpritePositions[playerColor][spriteNumber - 1] - 70;\n  let postitionContainer = document.getElementById(\"box-\"+playerColor+\"-\"+x);\n  let pawn = document.getElementById(playerColor+\"-pawn-\"+spriteNumber); \n  let position = getOffset(postitionContainer); \n\n  let previousPosition = getOffset(pawn);\n  animatePawn (pawn,previousPosition,position);\n  // pawn.style.top= position.top+\"px\";\n  // pawn.style.left= position.left+\"px\";\n  pawn.style.marginTop= \"9px\";\n  pawn.style.marginLeft= \"9px\";\n\n  players[playerColor+\"Finishing\"][spriteNumber - 1] = true;\n  players[playerColor+\"OutOfHome\"][spriteNumber - 1] = false;\n  nextMove();\n}\n\nfunction spriteWon(playerColor, spriteNumber){\n  finished[playerColor][spriteNumber - 1] = true; \n  players[playerColor+\"OutOfHome\"][spriteNumber - 1] = false;\n\n  let pawn = document.getElementById(playerColor+\"-pawn-\"+spriteNumber); \n\n  // pawn.style.top= \"200%\";\n  // pawn.style.left= \"200%\";\n  // pawn.style.marginTop= \"9px\";\n  // pawn.style.marginLeft= \"9px\";\n  let position = getOffset(document.getElementById('ending-box'));\n  let previousPosition = getOffset(pawn);\n  animatePawn(pawn,previousPosition,position);\n  pawn.removeEventListener(\"click\", myListener);\n\n  hasWon(playerColor);\n  nextMoveSamePlayer();\n  console.log('pawnwon');\n}\n\nfunction hasWon(playerColor) {\n  if (finished[playerColor][0] && finished[playerColor][1] && finished[playerColor][2] && finished[playerColor][3]) {\n    window.alert(playerColor+\"won\");\n  }\n}\n\nfunction animatePawn (pawn, previousPosition, position) {\n  let id = null;\n  let leftAdd = true;\n  let topAdd = true;\n\n  let pos = previousPosition;\n\n  if (position.left < previousPosition.left) {\n    leftAdd = false;\n  }\n  if (position.top < previousPosition.top) {\n    topAdd = false;\n  }\n\n  clearInterval(id);\n  id = setInterval(frame, 5);\n  let frameCount = 0;\n  function frame() {\n    frameCount++;\n    if (pos.left == position.left && pos.top == position.top || frameCount == 100) {\n      clearInterval(id);\n      pawn.style.top = position.top + 'px';\n      pawn.style.left = position.left + 'px';\n    } else {\n      if (leftAdd && pos.left != position.left) {\n        pos.left++;\n        pawn.style.left = pos.left + 'px';\n      }\n      if (!leftAdd && pos.left != position.left) {\n        pos.left--;\n        pawn.style.left = pos.left + 'px';\n      }\n      if (topAdd && pos.top != position.top) {\n        pos.top++;\n        pawn.style.top = pos.top + 'px';\n      }\n      if (!topAdd && pos.top != position.top) {\n        pos.top--;\n        pawn.style.top = pos.top + 'px';\n      }\n    }\n  }\n}\n\nwindow.addEventListener('resize', function(event) {\n  let playerColors = [\"red\",\"green\",\"blue\",\"yellow\"];\n  for (let i=0;i<4;i++){\n    let playerColor = playerColors[i];\n    console.log(playerColor);\n    for (let j=1;j<5;j++){\n      let pawn = document.getElementById(playerColor+\"-pawn-\"+j);\n\n      if(players[playerColor+\"OutOfHome\"][j-1] && !players[playerColor+\"Finishing\"][j-1]) {\n        let x = currentSpritePositions[playerColor][j-1]\n        let position = getOffset(document.getElementById(\"box\"+x));\n        pawn.style.top= position.top+\"px\";\n        pawn.style.left= position.left+\"px\";\n      }\n      if(!players[playerColor+\"OutOfHome\"][j-1]){\n        //send it to home\n        let position = getOffset(document.getElementById(playerColor+\"-circle-\"+j));\n        pawn.style.top= position.top+\"px\";\n        pawn.style.left= position.left+\"px\";\n      }\n      else if(players[playerColor+\"Finishing\"][j-1]){\n        let x = currentSpritePositions[playerColor][j-1] - 70;\n        let position = document.getElementById(\"box-\"+playerColor+\"-\"+x);\n        pawn.style.top= position.top+\"px\";\n        pawn.style.left= position.left+\"px\";\n      }\n    }\n  }\n  // update locations for all pawns\n  console.log(\"resize\");\n}, true);"],"mappings":"AACA,IAAIA,WAAW,GAAG,CAAlB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,aAAa,GAAG,OAApB;AAEA,IAAIC,sBAAsB,GAAG;EAC3BC,GAAG,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CADsB;EAE3BC,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAFoB;EAER;EACnBC,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAHqB;EAI3BC,MAAM,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV;AAJmB,CAA7B;AAMA,IAAIC,OAAO,GAAG;EACZC,YAAY,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CADF;EAEZC,SAAS,EAAE,KAFC;EAGZC,cAAc,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAHJ;EAGgC;EAC5CC,WAAW,EAAE,KAJD;EAIQ;EACpBC,aAAa,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CALH;EAMZC,UAAU,EAAE,KANA;EAOZC,eAAe,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAPL;EAQZC,YAAY,EAAE,KARF;EASZC,YAAY,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CATF;EAUZC,cAAc,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAVJ;EAWZC,aAAa,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAXH;EAYZC,eAAe,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB;AAZL,CAAd;AAcA,MAAMC,QAAQ,GAAG;EACfhB,KAAK,EAAE,EADQ;EAEfE,MAAM,EAAE,EAFO;EAGfD,IAAI,EAAE,EAHS;EAIfF,GAAG,EAAE;AAJU,CAAjB;AAMA,MAAMkB,uBAAuB,GAAG;EAC9BlB,GAAG,EAAE,EADyB;EAE9BC,KAAK,EAAE,CAFuB;EAG9BC,IAAI,EAAE,EAHwB;EAI9BC,MAAM,EAAE;AAJsB,CAAhC;AAOA,IAAIgB,QAAQ,GAAG;EACbnB,GAAG,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CADQ;EAEbC,KAAK,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAFM;EAGbC,IAAI,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAHO;EAIbC,MAAM,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB;AAJK,CAAf;AAOA,eAAe,SAASiB,YAAT,CAAsBC,WAAtB,EAAmC;EAChDC,eAAe,CAACD,WAAD,CAAf,CADgD,CAEhD;EACA;;EACAE,YAAY,CAACzB,aAAD,CAAZ;EACA;AACD;;AAED,SAAS0B,qBAAT,GAAgC;EAC9B,IAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAb;EACAF,MAAM,CAACG,gBAAP,CAAwB,OAAxB,EAAiCC,QAAjC;EACA;AACD;;AAED,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;EACnB,MAAMC,IAAI,GAAGD,EAAE,CAACE,qBAAH,EAAb;EACA,OAAO;IACLC,IAAI,EAAEF,IAAI,CAACE,IAAL,GAAYC,MAAM,CAACC,OADpB;IAELC,GAAG,EAAEL,IAAI,CAACK,GAAL,GAAWF,MAAM,CAACG;EAFlB,CAAP;AAID;;AAEH,SAAShB,eAAT,CAAyBD,WAAzB,EAAqC;EACnC,KAAK,IAAIkB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAuB;IACrB,IAAIC,kBAAkB,GAAGd,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,UAAZ,GAAuBkB,CAA/C,CAAzB;IACA,IAAIE,QAAQ,GAAGX,SAAS,CAACU,kBAAD,CAAxB;IACA,IAAIE,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBkB,CAA7C,CAAX;IAEAG,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAgBI,QAAQ,CAACJ,GAAT,GAAa,IAA7B;IACAK,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAiBO,QAAQ,CAACP,IAAT,GAAc,IAA/B;IACAQ,IAAI,CAACC,KAAL,CAAWC,SAAX,GAAsB,MAAtB;IACAF,IAAI,CAACC,KAAL,CAAWE,UAAX,GAAuB,MAAvB;IACAH,IAAI,CAACC,KAAL,CAAWG,eAAX,GAA2BzB,WAA3B;EACD;;EACD;AACD;;AAED,SAAS0B,oBAAT,CAA8B1B,WAA9B,EAA2C;EACzC,KAAK,IAAIkB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAuB;IACrB,IAAIG,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBkB,CAA7C,CAAX;IACAG,IAAI,CAACd,gBAAL,CAAsB,OAAtB,EAA+BoB,UAA/B;IACAN,IAAI,CAACC,KAAL,CAAWM,MAAX,GAAoB,IAApB;IACAC,OAAO,CAACC,GAAR,CAAYC,gBAAgB,CAACV,IAAD,CAAhB,CAAuBO,MAAnC,EAJqB,CAKrB;EACD;;EACD;AACD;;AAED,SAASI,cAAT,CAAwBhC,WAAxB,EAAqC;EACnC,KAAK,IAAIkB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAuB;IACrB,IAAIG,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBkB,CAA7C,CAAX;IACAG,IAAI,CAACY,mBAAL,CAAyB,OAAzB,EAAkCN,UAAlC;IACAN,IAAI,CAACC,KAAL,CAAWM,MAAX,GAAmB,IAAnB;IACAC,OAAO,CAACC,GAAR,CAAYC,gBAAgB,CAACV,IAAD,CAAhB,CAAuBO,MAAnC,EAJqB,CAKrB;EACD;;EACD;AACD;;AAED,SAASD,UAAT,CAAoBO,KAApB,EAA0B;EACxBC,aAAa,CAAC1D,aAAD,EAAgByD,KAAK,CAACE,MAAN,CAAaC,EAAb,CAAgBC,KAAhB,CAAsB,CAAC,CAAvB,CAAhB,CAAb;AACD;;AAED,SAASH,aAAT,CAAuBnC,WAAvB,EAAoCuC,YAApC,EAAkD;EAChD,IAAIxD,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAG,CAAhD,CAAJ,EAAwD;IACtDC,gBAAgB,CAACxC,WAAD,EAAauC,YAAb,CAAhB;IACA;EACD;;EACD,IAAIE,eAAe,CAACzC,WAAD,EAAcuC,YAAd,CAAf,IAA8C,CAACxD,OAAO,CAACiB,WAAW,GAAC,QAAb,CAA1D,EAAkF;IAChF;EACD;;EACD,IAAIyC,eAAe,CAACzC,WAAD,EAAcuC,YAAd,CAAf,IAA8CxD,OAAO,CAACiB,WAAW,GAAC,QAAb,CAAzD,EAAiF;IAC/E0C,cAAc,CAAC1C,WAAD,EAAcuC,YAAd,CAAd;IACA;EACD;;EACD,IAAI7D,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDhE,WAAtD,GAAoE,EAApE,IAA0EG,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDhE,WAAtD,GAAoE,EAAlJ,EAAsJ;IACpJ,IAAIoE,UAAU,GAAGjE,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDhE,WAAtD,GAAoE,EAArF;IACAG,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDI,UAAU,GAAC,CAAjE;IACAC,QAAQ,CAAC5C,WAAD,EAAcuC,YAAd,CAAR;EACD,CAJD,MAKK,IAAI,CAACxD,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAC,CAA9C,CAAD,IAAqDhE,WAAW,IAAE,CAAtE,EAAwE;IAC3E;EACD,CAFI,MAGA,IAAIQ,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAC,CAA9C,CAAJ,EAAsD;IACzD7D,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsD7D,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDhE,WAA5G;IACAqE,QAAQ,CAAC5C,WAAD,EAAcuC,YAAd,CAAR;EACD;;EACD,IAAI,CAACxD,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAC,CAA9C,CAAD,IAAqDhE,WAAW,IAAE,CAAtE,EAAyE;IACvE;IACAQ,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAC,CAA9C,IAAmD,IAAnD;IACAK,QAAQ,CAAC5C,WAAD,EAAcuC,YAAd,CAAR;EACD;AACF;;AAED,SAASE,eAAT,CAAyBzC,WAAzB,EAAsCuC,YAAtC,EAAoD;EAClD,IAAIM,UAAU,GAAG,KAAjB;;EACA,IAAInE,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,KAAuD3C,QAAQ,CAACI,WAAD,CAAnE,EAAiF;IAAE;IACjF6C,UAAU,GAAG,IAAb;EACD;;EACD,IAAInE,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDhE,WAAtD,GAAoEqB,QAAQ,CAACI,WAAD,CAA5E,IAA6F6C,UAAjG,EAA6G;IAC3G,OAAO,IAAP,CAD2G,CAC9F;EACd;AACF;;AAED,SAASrC,QAAT,GAAoB;EAClBjC,WAAW,GAAGuE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,IAAI,CAAJ,GAAQ,CAAzB,IAA8B,CAAzC,CAAd;EACA,IAAIC,WAAW,GAAG5C,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;EACA2C,WAAW,CAACC,SAAZ,GAAwB3E,WAAxB;EACA8B,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyC2B,mBAAzC,CAA6D,OAA7D,EAAsEzB,QAAtE;;EACA,IAAGjC,WAAW,GAAG,CAAd,IAAmB4E,QAAQ,CAAC1E,aAAD,CAA9B,EAA+C;IAC7C2E,QAAQ;EACT,CAFD,MAGK;IACH1B,oBAAoB,CAACjD,aAAD,CAApB;EACD;;EACD;AACD;;AAED,SAAS4E,cAAT,CAAyBrD,WAAzB,EAAsCoB,QAAtC,EAAgD;EAC9C,IAAGA,QAAQ,IAAI,EAAZ,IAAkBA,QAAQ,IAAI,CAA9B,IAAmCA,QAAQ,IAAI,CAA/C,IAAoDA,QAAQ,IAAI,EAAhE,IAAsEA,QAAQ,IAAI,EAAlF,IAAwFA,QAAQ,IAAI,EAApG,IAA0GA,QAAQ,IAAI,EAAtH,IAA4HA,QAAQ,IAAI,EAA3I,EAA8I;IAC5I,OAAO,KAAP;EACD,CAH6C,CAK9C;;;EACA,IAAIkC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY9E,sBAAZ,CAAb;EACA,IAAI+E,QAAQ,GAAG,KAAf;;EAEA,KAAK,IAAIvC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;IACtB,IAAIwC,YAAY,GAAGJ,MAAM,CAACpC,CAAD,CAAzB;;IACA,KAAI,IAAIyC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAsB;MACpB,IAAIvC,QAAQ,IAAI1C,sBAAsB,CAACgF,YAAD,CAAtB,CAAqCC,CAArC,CAAZ,IAAuDD,YAAY,IAAI1D,WAA3E,EAAwF;QACtF;QACA;QACAyD,QAAQ,GAAGG,YAAY,CAACF,YAAD,EAAeC,CAAC,GAAG,CAAnB,CAAvB;MACD;IACF;EACF;;EACD,OAAOF,QAAP;AACD;;AAED,SAASb,QAAT,CAAkB5C,WAAlB,EAA+BuC,YAA/B,EAA4C;EAC1C,IAAIsB,CAAC,GAAGnF,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAG,CAAnD,CAAR;EACA,IAAIpB,kBAAkB,GAAGd,QAAQ,CAACC,cAAT,CAAwB,QAAMuD,CAA9B,CAAzB;EACA,IAAIxC,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBuC,YAA7C,CAAX,CAH0C,CAG8B;;EACxE,IAAInB,QAAQ,GAAGX,SAAS,CAACU,kBAAD,CAAxB,CAJ0C,CAIK;;EAC/C,IAAI2C,gBAAgB,GAAGrD,SAAS,CAACY,IAAD,CAAhC;EAEA,IAAIoC,QAAQ,GAAGJ,cAAc,CAACrD,WAAD,EAAc6D,CAAd,CAA7B;EACAE,WAAW,CAAC1C,IAAD,EAAOyC,gBAAP,EAAyB1C,QAAzB,CAAX,CAR0C,CAU1C;EACA;;EACAC,IAAI,CAACC,KAAL,CAAWC,SAAX,GAAsB,KAAtB;EACAF,IAAI,CAACC,KAAL,CAAWE,UAAX,GAAuB,KAAvB;;EAEA,IAAIiC,QAAJ,EAAc;IACZ5B,OAAO,CAACC,GAAR,CAAY2B,QAAZ;IACAO,kBAAkB;EACnB,CAHD,MAIK,IAAIzF,WAAW,IAAI,CAAnB,EAAsB;IACzByF,kBAAkB,GADO,CACH;EACvB,CAFI,MAEE;IACLZ,QAAQ;EACT;;EAED;AACD;;AAED,SAASQ,YAAT,CAAsB5D,WAAtB,EAAkCuC,YAAlC,EAA+C;EAC3C,IAAIpB,kBAAkB,GAAGd,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,UAAZ,GAAuBuC,YAA/C,CAAzB;EACA,IAAInB,QAAQ,GAAGX,SAAS,CAACU,kBAAD,CAAxB;EACA,IAAIE,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBuC,YAA7C,CAAX;EACA,IAAIuB,gBAAgB,GAAGrD,SAAS,CAACY,IAAD,CAAhC,CAJ2C,CAM3C;EACA;;EACA0C,WAAW,CAAC1C,IAAD,EAAMyC,gBAAN,EAAuB1C,QAAvB,CAAX;EACAC,IAAI,CAACC,KAAL,CAAWC,SAAX,GAAsB,MAAtB;EACAF,IAAI,CAACC,KAAL,CAAWE,UAAX,GAAuB,MAAvB,CAV2C,CAW3C;;EAEAzC,OAAO,CAACN,aAAa,GAAC,QAAf,CAAP,GAAkC,IAAlC;EACAoD,OAAO,CAACC,GAAR,CAAY/C,OAAZ,EAd2C,CAgB3C;;EACAL,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAE,CAAlD,IAAuD1C,uBAAuB,CAACG,WAAD,CAA9E;EACAjB,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAC,CAA9C,IAAmD,KAAnD;;EACA,IAAIY,QAAQ,CAACnD,WAAD,CAAZ,EAA2B;IACzBjB,OAAO,CAACiB,WAAW,GAAC,QAAb,CAAP,GAAgC,KAAhC;EACD;;EACH,OAAO,IAAP;AACD;;AAED,SAASgE,kBAAT,GAA8B;EAC5B3D,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwC4C,SAAxC,GAAoD,EAApD;EACAlB,cAAc,CAACvD,aAAD,CAAd;EAEA0B,qBAAqB,GAJO,CAM5B;;EACA;AACD;;AAED,SAASiD,QAAT,GAAmB;EACjB/C,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwC4C,SAAxC,GAAoD,EAApD;EACAlB,cAAc,CAACvD,aAAD,CAAd;EAEA,IAAIwF,MAAM,GAAGxF,aAAb;;EACA,QAAQwF,MAAR;IACE,KAAK,KAAL;MAAYxF,aAAa,GAAC,OAAd;MACZ;;IACA,KAAK,OAAL;MAAcA,aAAa,GAAC,QAAd;MACd;;IACA,KAAK,QAAL;MAAeA,aAAa,GAAC,MAAd;MACf;;IACA,KAAK,MAAL;MAAaA,aAAa,GAAC,KAAd;MACb;EARF,CALiB,CAejB;;;EAEA0B,qBAAqB,GAjBJ,CAkBjB;;EACA3B,YAAY,GAAGD,WAAf;EACAA,WAAW,GAAG,CAAd,CApBiB,CAoBA;EACjB;;EACA2B,YAAY,CAACzB,aAAD,CAAZ;EACA;AACD;;AAED,SAASyB,YAAT,CAAsBF,WAAtB,EAAmC;EACjC,IAAIkE,OAAO,GAAG7D,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAd;EACA4D,OAAO,CAAChB,SAAR,GAAoBlD,WAAW,GAAC,UAAhC;EACAkE,OAAO,CAAC5C,KAAR,CAAc6C,KAAd,GAAsBnE,WAAtB;EAEA6B,OAAO,CAACC,GAAR,CAAYrD,aAAZ;EACA0B,qBAAqB,GANY,CAOjC;;EACA;AACD;;AAED,SAASgD,QAAT,CAAkBnD,WAAlB,EAA+B;EAC7B,KAAK,IAAIkB,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;IACnB,IAAInC,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCkB,CAAjC,CAAJ,EAAyC;MACvC,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP,CAN6B,CAQ7B;AACD;;AAED,SAASsB,gBAAT,CAA0BxC,WAA1B,EAAuCuC,YAAvC,EAAqD;EACnD,IAAI6B,WAAW,GAAG1F,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAG,CAAnD,IAAwDhE,WAA1E;EACAsD,OAAO,CAACC,GAAR,CAAY,cAAZ;;EACA,IAAIsC,WAAW,GAAG,EAAlB,EAAsB;IACpB;EACD;;EACD,IAAIA,WAAW,IAAI,EAAnB,EAAuB;IACrBC,SAAS,CAACrE,WAAD,EAAcuC,YAAd,CAAT;IACA;EACD;;EAED7D,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAG,CAAnD,IAAwD6B,WAAxD;EACA,IAAIP,CAAC,GAAGO,WAAW,GAAG,EAAtB;EACA,IAAIjD,kBAAkB,GAAGd,QAAQ,CAACC,cAAT,CAAwB,SAAON,WAAP,GAAmB,GAAnB,GAAuB6D,CAA/C,CAAzB;EACA,IAAIxC,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBuC,YAA7C,CAAX;EACA,IAAInB,QAAQ,GAAGX,SAAS,CAACU,kBAAD,CAAxB;EAEA,IAAI2C,gBAAgB,GAAGrD,SAAS,CAACY,IAAD,CAAhC;EACA0C,WAAW,CAAC1C,IAAD,EAAMyC,gBAAN,EAAuB1C,QAAvB,CAAX,CAlBmD,CAmBnD;EACA;;EACAC,IAAI,CAACC,KAAL,CAAWC,SAAX,GAAsB,KAAtB;EACAF,IAAI,CAACC,KAAL,CAAWE,UAAX,GAAuB,KAAvB;EACA4B,QAAQ;AACT;;AAED,SAASV,cAAT,CAAwB1C,WAAxB,EAAoCuC,YAApC,EAAkD;EAChD,IAAII,UAAU,GAAGjE,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAC,CAAjD,IAAsDhE,WAAtD,GAAoEqB,QAAQ,CAACI,WAAD,CAA7F,CADgD,CAC4D;;EAC5G,IAAI2C,UAAU,IAAI,CAAlB,EAAqB;IACnB0B,SAAS,CAACrE,WAAD,EAAcuC,YAAd,CAAT;IACA;EACD;;EAED7D,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAG,CAAnD,IAAwDI,UAAU,GAAG,EAArE;EAEA,IAAIkB,CAAC,GAAGnF,sBAAsB,CAACsB,WAAD,CAAtB,CAAoCuC,YAAY,GAAG,CAAnD,IAAwD,EAAhE;EACA,IAAIpB,kBAAkB,GAAGd,QAAQ,CAACC,cAAT,CAAwB,SAAON,WAAP,GAAmB,GAAnB,GAAuB6D,CAA/C,CAAzB;EACA,IAAIxC,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBuC,YAA7C,CAAX;EACA,IAAInB,QAAQ,GAAGX,SAAS,CAACU,kBAAD,CAAxB;EAEA,IAAI2C,gBAAgB,GAAGrD,SAAS,CAACY,IAAD,CAAhC;EACA0C,WAAW,CAAE1C,IAAF,EAAOyC,gBAAP,EAAwB1C,QAAxB,CAAX,CAfgD,CAgBhD;EACA;;EACAC,IAAI,CAACC,KAAL,CAAWC,SAAX,GAAsB,KAAtB;EACAF,IAAI,CAACC,KAAL,CAAWE,UAAX,GAAuB,KAAvB;EAEAzC,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAG,CAAhD,IAAqD,IAArD;EACAxD,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAG,CAAhD,IAAqD,KAArD;EACAa,QAAQ;AACT;;AAED,SAASiB,SAAT,CAAmBrE,WAAnB,EAAgCuC,YAAhC,EAA6C;EAC3CzC,QAAQ,CAACE,WAAD,CAAR,CAAsBuC,YAAY,GAAG,CAArC,IAA0C,IAA1C;EACAxD,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiCuC,YAAY,GAAG,CAAhD,IAAqD,KAArD;EAEA,IAAIlB,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqBuC,YAA7C,CAAX,CAJ2C,CAM3C;EACA;EACA;EACA;;EACA,IAAInB,QAAQ,GAAGX,SAAS,CAACJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAD,CAAxB;EACA,IAAIwD,gBAAgB,GAAGrD,SAAS,CAACY,IAAD,CAAhC;EACA0C,WAAW,CAAC1C,IAAD,EAAMyC,gBAAN,EAAuB1C,QAAvB,CAAX;EACAC,IAAI,CAACY,mBAAL,CAAyB,OAAzB,EAAkCN,UAAlC;EAEA2C,MAAM,CAACtE,WAAD,CAAN;EACAgE,kBAAkB;EAClBnC,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAED,SAASwC,MAAT,CAAgBtE,WAAhB,EAA6B;EAC3B,IAAIF,QAAQ,CAACE,WAAD,CAAR,CAAsB,CAAtB,KAA4BF,QAAQ,CAACE,WAAD,CAAR,CAAsB,CAAtB,CAA5B,IAAwDF,QAAQ,CAACE,WAAD,CAAR,CAAsB,CAAtB,CAAxD,IAAoFF,QAAQ,CAACE,WAAD,CAAR,CAAsB,CAAtB,CAAxF,EAAkH;IAChHc,MAAM,CAACyD,KAAP,CAAavE,WAAW,GAAC,KAAzB;EACD;AACF;;AAED,SAAS+D,WAAT,CAAsB1C,IAAtB,EAA4ByC,gBAA5B,EAA8C1C,QAA9C,EAAwD;EACtD,IAAIiB,EAAE,GAAG,IAAT;EACA,IAAImC,OAAO,GAAG,IAAd;EACA,IAAIC,MAAM,GAAG,IAAb;EAEA,IAAIC,GAAG,GAAGZ,gBAAV;;EAEA,IAAI1C,QAAQ,CAACP,IAAT,GAAgBiD,gBAAgB,CAACjD,IAArC,EAA2C;IACzC2D,OAAO,GAAG,KAAV;EACD;;EACD,IAAIpD,QAAQ,CAACJ,GAAT,GAAe8C,gBAAgB,CAAC9C,GAApC,EAAyC;IACvCyD,MAAM,GAAG,KAAT;EACD;;EAEDE,aAAa,CAACtC,EAAD,CAAb;EACAA,EAAE,GAAGuC,WAAW,CAACC,KAAD,EAAQ,CAAR,CAAhB;EACA,IAAIC,UAAU,GAAG,CAAjB;;EACA,SAASD,KAAT,GAAiB;IACfC,UAAU;;IACV,IAAIJ,GAAG,CAAC7D,IAAJ,IAAYO,QAAQ,CAACP,IAArB,IAA6B6D,GAAG,CAAC1D,GAAJ,IAAWI,QAAQ,CAACJ,GAAjD,IAAwD8D,UAAU,IAAI,GAA1E,EAA+E;MAC7EH,aAAa,CAACtC,EAAD,CAAb;MACAhB,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAiBI,QAAQ,CAACJ,GAAT,GAAe,IAAhC;MACAK,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAkBO,QAAQ,CAACP,IAAT,GAAgB,IAAlC;IACD,CAJD,MAIO;MACL,IAAI2D,OAAO,IAAIE,GAAG,CAAC7D,IAAJ,IAAYO,QAAQ,CAACP,IAApC,EAA0C;QACxC6D,GAAG,CAAC7D,IAAJ;QACAQ,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAkB6D,GAAG,CAAC7D,IAAJ,GAAW,IAA7B;MACD;;MACD,IAAI,CAAC2D,OAAD,IAAYE,GAAG,CAAC7D,IAAJ,IAAYO,QAAQ,CAACP,IAArC,EAA2C;QACzC6D,GAAG,CAAC7D,IAAJ;QACAQ,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAkB6D,GAAG,CAAC7D,IAAJ,GAAW,IAA7B;MACD;;MACD,IAAI4D,MAAM,IAAIC,GAAG,CAAC1D,GAAJ,IAAWI,QAAQ,CAACJ,GAAlC,EAAuC;QACrC0D,GAAG,CAAC1D,GAAJ;QACAK,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAiB0D,GAAG,CAAC1D,GAAJ,GAAU,IAA3B;MACD;;MACD,IAAI,CAACyD,MAAD,IAAWC,GAAG,CAAC1D,GAAJ,IAAWI,QAAQ,CAACJ,GAAnC,EAAwC;QACtC0D,GAAG,CAAC1D,GAAJ;QACAK,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAiB0D,GAAG,CAAC1D,GAAJ,GAAU,IAA3B;MACD;IACF;EACF;AACF;;AAEDF,MAAM,CAACP,gBAAP,CAAwB,QAAxB,EAAkC,UAAS2B,KAAT,EAAgB;EAChD,IAAI6C,YAAY,GAAG,CAAC,KAAD,EAAO,OAAP,EAAe,MAAf,EAAsB,QAAtB,CAAnB;;EACA,KAAK,IAAI7D,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;IACnB,IAAIlB,WAAW,GAAG+E,YAAY,CAAC7D,CAAD,CAA9B;IACAW,OAAO,CAACC,GAAR,CAAY9B,WAAZ;;IACA,KAAK,IAAI2D,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;MACnB,IAAItC,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,QAAZ,GAAqB2D,CAA7C,CAAX;;MAEA,IAAG5E,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiC2D,CAAC,GAAC,CAAnC,KAAyC,CAAC5E,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiC2D,CAAC,GAAC,CAAnC,CAA7C,EAAoF;QAClF,IAAIE,CAAC,GAAGnF,sBAAsB,CAACsB,WAAD,CAAtB,CAAoC2D,CAAC,GAAC,CAAtC,CAAR;QACA,IAAIvC,QAAQ,GAAGX,SAAS,CAACJ,QAAQ,CAACC,cAAT,CAAwB,QAAMuD,CAA9B,CAAD,CAAxB;QACAxC,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAgBI,QAAQ,CAACJ,GAAT,GAAa,IAA7B;QACAK,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAiBO,QAAQ,CAACP,IAAT,GAAc,IAA/B;MACD;;MACD,IAAG,CAAC9B,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiC2D,CAAC,GAAC,CAAnC,CAAJ,EAA0C;QACxC;QACA,IAAIvC,QAAQ,GAAGX,SAAS,CAACJ,QAAQ,CAACC,cAAT,CAAwBN,WAAW,GAAC,UAAZ,GAAuB2D,CAA/C,CAAD,CAAxB;QACAtC,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAgBI,QAAQ,CAACJ,GAAT,GAAa,IAA7B;QACAK,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAiBO,QAAQ,CAACP,IAAT,GAAc,IAA/B;MACD,CALD,MAMK,IAAG9B,OAAO,CAACiB,WAAW,GAAC,WAAb,CAAP,CAAiC2D,CAAC,GAAC,CAAnC,CAAH,EAAyC;QAC5C,IAAIE,CAAC,GAAGnF,sBAAsB,CAACsB,WAAD,CAAtB,CAAoC2D,CAAC,GAAC,CAAtC,IAA2C,EAAnD;QACA,IAAIvC,QAAQ,GAAGf,QAAQ,CAACC,cAAT,CAAwB,SAAON,WAAP,GAAmB,GAAnB,GAAuB6D,CAA/C,CAAf;QACAxC,IAAI,CAACC,KAAL,CAAWN,GAAX,GAAgBI,QAAQ,CAACJ,GAAT,GAAa,IAA7B;QACAK,IAAI,CAACC,KAAL,CAAWT,IAAX,GAAiBO,QAAQ,CAACP,IAAT,GAAc,IAA/B;MACD;IACF;EACF,CA3B+C,CA4BhD;;;EACAgB,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,CA9BD,EA8BG,IA9BH"},"metadata":{},"sourceType":"module"}