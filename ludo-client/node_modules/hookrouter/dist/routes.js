"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRoutes = exports.RouterProvider = exports.createMemoryRouter = exports.createBrowserRouter = void 0;
var react_1 = __importDefault(require("react"));
var use_subscription_1 = require("use-subscription");
function createBrowserRouter(basePath) {
    var memoryRouter = createMemoryRouter(document.location.pathname);
    window.addEventListener("click", function (e) {
        var _a;
        // @ts-ignore
        if (((_a = e.target) === null || _a === void 0 ? void 0 : _a.nodeName) === "A") {
        }
    });
    window.addEventListener("popstate", function (e) {
        memoryRouter.navigate(document.location.pathname);
    });
    memoryRouter.subscribe(function () {
        window.history.pushState(null, "", memoryRouter.getCurrentValue());
    });
    return memoryRouter;
}
exports.createBrowserRouter = createBrowserRouter;
function createMemoryRouter(initialPath) {
    if (initialPath === void 0) { initialPath = "/"; }
    var path = initialPath;
    var subscriptions = new Map();
    return {
        navigate: function (nextUrl) {
            path = nextUrl;
            subscriptions.forEach(function (v, callback) { return callback(); });
        },
        getCurrentValue: function () { return path; },
        subscribe: function (callback) {
            subscriptions.set(callback, 1);
            return function () { return subscriptions.delete(callback); };
        }
    };
}
exports.createMemoryRouter = createMemoryRouter;
var defaultRouter = typeof window !== "undefined" ? createBrowserRouter() : createMemoryRouter();
var routerContext = react_1.default.createContext(defaultRouter);
var RouterProvider = function (_a) {
    var children = _a.children, router = _a.router;
    return react_1.default.createElement(routerContext.Provider, { value: router }, children);
};
exports.RouterProvider = RouterProvider;
var useRoutes = function (routes) {
    var router = react_1.default.useContext(routerContext);
    var path = use_subscription_1.useSubscription(router);
    return routes[path] ? routes[path]() : null;
};
exports.useRoutes = useRoutes;
//# sourceMappingURL=routes.js.map